{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { TransactionType } from '../../models/transaction.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/transaction.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction TransactionFormComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TransactionFormComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.error);\n  }\n}\nfunction TransactionFormComponent_form_5_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵlistener(\"click\", function TransactionFormComponent_form_5_div_5_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const type_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      let tmp_b_0;\n      return i0.ɵɵresetView((tmp_b_0 = ctx_r10.transactionForm.get(\"type\")) == null ? null : tmp_b_0.setValue(type_r9));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r9 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵclassProp(\"active\", ((tmp_0_0 = ctx_r3.transactionForm.get(\"type\")) == null ? null : tmp_0_0.value) === type_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", type_r9, \" \");\n  }\n}\nfunction TransactionFormComponent_form_5_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.getErrorMessage(\"description\"), \" \");\n  }\n}\nfunction TransactionFormComponent_form_5_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.getErrorMessage(\"amount\"), \" \");\n  }\n}\nfunction TransactionFormComponent_form_5_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.getErrorMessage(\"date\"), \" \");\n  }\n}\nfunction TransactionFormComponent_form_5_option_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r12);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(category_r12);\n  }\n}\nfunction TransactionFormComponent_form_5_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.getErrorMessage(\"category\"), \" \");\n  }\n}\nfunction TransactionFormComponent_form_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 6);\n    i0.ɵɵlistener(\"ngSubmit\", function TransactionFormComponent_form_5_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 7)(2, \"label\", 8);\n    i0.ɵɵtext(3, \"Transaction Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 9);\n    i0.ɵɵtemplate(5, TransactionFormComponent_form_5_div_5_Template, 2, 3, \"div\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 7)(7, \"label\", 11);\n    i0.ɵɵtext(8, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 12);\n    i0.ɵɵtemplate(10, TransactionFormComponent_form_5_div_10_Template, 2, 1, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 7)(12, \"label\", 14);\n    i0.ɵɵtext(13, \"Amount\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 15)(15, \"span\", 16);\n    i0.ɵɵtext(16, \"\\u20AC\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(17, \"input\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(18, TransactionFormComponent_form_5_div_18_Template, 2, 1, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 7)(20, \"label\", 18);\n    i0.ɵɵtext(21, \"Date & Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"input\", 19);\n    i0.ɵɵtemplate(23, TransactionFormComponent_form_5_div_23_Template, 2, 1, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"div\", 7)(25, \"label\", 20);\n    i0.ɵɵtext(26, \"Category\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"select\", 21)(28, \"option\", 22);\n    i0.ɵɵtext(29, \"Select a category\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(30, TransactionFormComponent_form_5_option_30_Template, 2, 2, \"option\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(31, TransactionFormComponent_form_5_div_31_Template, 2, 1, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"div\", 24)(33, \"button\", 25);\n    i0.ɵɵtext(34, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"button\", 26);\n    i0.ɵɵtext(36);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r2.transactionForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.transactionTypes);\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassProp(\"invalid\", ctx_r2.isInvalid(\"description\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isInvalid(\"description\"));\n    i0.ɵɵadvance(7);\n    i0.ɵɵclassProp(\"invalid\", ctx_r2.isInvalid(\"amount\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isInvalid(\"amount\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassProp(\"invalid\", ctx_r2.isInvalid(\"date\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isInvalid(\"date\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassProp(\"invalid\", ctx_r2.isInvalid(\"category\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.categories);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isInvalid(\"category\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.isEditMode ? \"Update\" : \"Add\", \" Transaction\");\n  }\n}\nexport class TransactionFormComponent {\n  constructor(fb, transactionService, route, router) {\n    this.fb = fb;\n    this.transactionService = transactionService;\n    this.route = route;\n    this.router = router;\n    this.isEditMode = false;\n    this.transactionId = null;\n    this.loading = false;\n    this.error = null;\n    this.transactionTypes = Object.values(TransactionType);\n    // Common categories for transactions\n    this.categories = ['Food & Dining', 'Shopping', 'Housing', 'Transportation', 'Entertainment', 'Healthcare', 'Education', 'Utilities', 'Travel', 'Gifts & Donations', 'Salary', 'Investment', 'Other Income'];\n    this.transactionForm = this.fb.group({\n      description: ['', [Validators.required, Validators.maxLength(100)]],\n      amount: ['', [Validators.required, Validators.min(0.01)]],\n      date: ['', Validators.required],\n      category: ['', Validators.required],\n      type: [TransactionType.EXPENSE, Validators.required]\n    });\n  }\n  ngOnInit() {\n    // Check if we're in edit mode by looking for an ID in the route\n    this.route.params.subscribe(params => {\n      if (params['id']) {\n        this.isEditMode = true;\n        this.transactionId = +params['id'];\n        this.loadTransaction(this.transactionId);\n      } else {\n        // Set default date to today for new transactions\n        const today = new Date();\n        const formattedDate = today.toISOString().substring(0, 16); // Format: YYYY-MM-DDTHH:MM\n        this.transactionForm.patchValue({\n          date: formattedDate\n        });\n      }\n    });\n  }\n  loadTransaction(id) {\n    this.loading = true;\n    this.transactionService.getTransactionById(id).subscribe({\n      next: transaction => {\n        // Format the date to be compatible with the datetime-local input\n        const formattedDate = new Date(transaction.date).toISOString().substring(0, 16);\n        this.transactionForm.patchValue({\n          description: transaction.description,\n          amount: transaction.amount,\n          date: formattedDate,\n          category: transaction.category,\n          type: transaction.type\n        });\n        this.loading = false;\n      },\n      error: err => {\n        this.error = 'Failed to load transaction';\n        this.loading = false;\n        console.error(err);\n      }\n    });\n  }\n  onSubmit() {\n    if (this.transactionForm.invalid) {\n      // Mark all fields as touched to trigger validation messages\n      Object.keys(this.transactionForm.controls).forEach(key => {\n        const control = this.transactionForm.get(key);\n        control?.markAsTouched();\n      });\n      return;\n    }\n    this.loading = true;\n    // Create transaction object from form values\n    const transactionData = {\n      ...this.transactionForm.value,\n      // Ensure date is in ISO format\n      date: new Date(this.transactionForm.value.date).toISOString()\n    };\n    // If in edit mode, update existing transaction, otherwise create new one\n    if (this.isEditMode && this.transactionId) {\n      transactionData.id = this.transactionId;\n      this.transactionService.updateTransaction(transactionData).subscribe({\n        next: () => {\n          this.loading = false;\n          this.router.navigate(['/transactions']);\n        },\n        error: err => {\n          this.error = 'Failed to update transaction';\n          this.loading = false;\n          console.error(err);\n        }\n      });\n    } else {\n      this.transactionService.createTransaction(transactionData).subscribe({\n        next: () => {\n          this.loading = false;\n          this.router.navigate(['/transactions']);\n        },\n        error: err => {\n          this.error = 'Failed to create transaction';\n          this.loading = false;\n          console.error(err);\n        }\n      });\n    }\n  }\n  // Helper method to check if a form control is invalid and touched\n  isInvalid(controlName) {\n    const control = this.transactionForm.get(controlName);\n    return !!control && control.invalid && (control.dirty || control.touched);\n  }\n  // Helper method to get error message for a form control\n  getErrorMessage(controlName) {\n    const control = this.transactionForm.get(controlName);\n    if (!control) return '';\n    if (control.errors?.['required']) {\n      return 'This field is required';\n    }\n    if (control.errors?.['min']) {\n      return 'Value must be greater than 0';\n    }\n    if (control.errors?.['maxlength']) {\n      return 'Value is too long';\n    }\n    return 'Invalid value';\n  }\n  static {\n    this.ɵfac = function TransactionFormComponent_Factory(t) {\n      return new (t || TransactionFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TransactionService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TransactionFormComponent,\n      selectors: [[\"app-transaction-form\"]],\n      decls: 6,\n      vars: 4,\n      consts: [[1, \"form-container\"], [\"class\", \"loading\", 4, \"ngIf\"], [\"class\", \"error-message\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [1, \"loading\"], [1, \"error-message\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"type\"], [1, \"transaction-type-toggle\"], [\"class\", \"toggle-option\", 3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"formControlName\", \"description\", \"placeholder\", \"What was this transaction for?\"], [\"class\", \"error-text\", 4, \"ngIf\"], [\"for\", \"amount\"], [1, \"amount-input\"], [1, \"currency-symbol\"], [\"type\", \"number\", \"id\", \"amount\", \"formControlName\", \"amount\", \"step\", \"0.01\", \"min\", \"0.01\", \"placeholder\", \"0.00\"], [\"for\", \"date\"], [\"type\", \"datetime-local\", \"id\", \"date\", \"formControlName\", \"date\"], [\"for\", \"category\"], [\"id\", \"category\", \"formControlName\", \"category\"], [\"value\", \"\", \"disabled\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-actions\"], [\"type\", \"button\", \"routerLink\", \"/transactions\", 1, \"btn-secondary\"], [\"type\", \"submit\", 1, \"btn-primary\"], [1, \"toggle-option\", 3, \"click\"], [1, \"error-text\"], [3, \"value\"]],\n      template: function TransactionFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, TransactionFormComponent_div_3_Template, 2, 0, \"div\", 1);\n          i0.ɵɵtemplate(4, TransactionFormComponent_div_4_Template, 2, 1, \"div\", 2);\n          i0.ɵɵtemplate(5, TransactionFormComponent_form_5_Template, 37, 16, \"form\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Edit\" : \"Add\", \" Transaction\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n        }\n      },\n      dependencies: [i4.NgForOf, i4.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MinValidator, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".form-container[_ngcontent-%COMP%] {\\n  max-width: 600px;\\n  margin: 0 auto;\\n  padding: 20px;\\n  background-color: white;\\n  border-radius: 8px;\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\\n}\\n.form-container[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%] {\\n  margin-top: 0;\\n  margin-bottom: 24px;\\n  font-weight: 500;\\n  color: #333;\\n}\\n\\n.loading[_ngcontent-%COMP%], .error-message[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  text-align: center;\\n}\\n\\n.error-message[_ngcontent-%COMP%] {\\n  color: #e74c3c;\\n  background-color: #fdf3f2;\\n  border-radius: 4px;\\n  margin-bottom: 20px;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n}\\n.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  display: block;\\n  margin-bottom: 8px;\\n  font-weight: 500;\\n  color: #666;\\n}\\n.form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .form-group[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 10px 12px;\\n  border: 1px solid #ddd;\\n  border-radius: 4px;\\n  font-size: 16px;\\n}\\n.form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus, .form-group[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border-color: #3498db;\\n  box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.2);\\n}\\n.form-group[_ngcontent-%COMP%]   input.invalid[_ngcontent-%COMP%], .form-group[_ngcontent-%COMP%]   select.invalid[_ngcontent-%COMP%] {\\n  border-color: #e74c3c;\\n}\\n.form-group[_ngcontent-%COMP%]   input.invalid[_ngcontent-%COMP%]:focus, .form-group[_ngcontent-%COMP%]   select.invalid[_ngcontent-%COMP%]:focus {\\n  box-shadow: 0 0 0 2px rgba(231, 76, 60, 0.2);\\n}\\n.form-group[_ngcontent-%COMP%]   .error-text[_ngcontent-%COMP%] {\\n  color: #e74c3c;\\n  font-size: 14px;\\n  margin-top: 4px;\\n}\\n\\n.transaction-type-toggle[_ngcontent-%COMP%] {\\n  display: flex;\\n  border: 1px solid #ddd;\\n  border-radius: 4px;\\n  overflow: hidden;\\n}\\n.transaction-type-toggle[_ngcontent-%COMP%]   .toggle-option[_ngcontent-%COMP%] {\\n  flex: 1;\\n  text-align: center;\\n  padding: 12px;\\n  cursor: pointer;\\n  transition: background-color 0.2s;\\n}\\n.transaction-type-toggle[_ngcontent-%COMP%]   .toggle-option[_ngcontent-%COMP%]:first-child {\\n  border-right: 1px solid #ddd;\\n}\\n.transaction-type-toggle[_ngcontent-%COMP%]   .toggle-option.active[_ngcontent-%COMP%] {\\n  background-color: #3498db;\\n  color: white;\\n}\\n\\n.amount-input[_ngcontent-%COMP%] {\\n  position: relative;\\n}\\n.amount-input[_ngcontent-%COMP%]   .currency-symbol[_ngcontent-%COMP%] {\\n  position: absolute;\\n  left: 12px;\\n  top: 50%;\\n  transform: translateY(-50%);\\n  color: #666;\\n}\\n.amount-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  padding-left: 24px;\\n}\\n\\n.form-actions[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: flex-end;\\n  gap: 12px;\\n  margin-top: 30px;\\n}\\n.form-actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  padding: 10px 20px;\\n  border-radius: 4px;\\n  font-weight: 500;\\n  cursor: pointer;\\n  border: none;\\n  transition: background-color 0.2s;\\n}\\n.form-actions[_ngcontent-%COMP%]   .btn-primary[_ngcontent-%COMP%] {\\n  background-color: #3498db;\\n  color: white;\\n}\\n.form-actions[_ngcontent-%COMP%]   .btn-primary[_ngcontent-%COMP%]:hover {\\n  background-color: #2980b9;\\n}\\n.form-actions[_ngcontent-%COMP%]   .btn-secondary[_ngcontent-%COMP%] {\\n  background-color: #f5f5f5;\\n  color: #666;\\n}\\n.form-actions[_ngcontent-%COMP%]   .btn-secondary[_ngcontent-%COMP%]:hover {\\n  background-color: #e0e0e0;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90cmFuc2FjdGlvbi1mb3JtL3RyYW5zYWN0aW9uLWZvcm0uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBQTtFQUNBLGNBQUE7RUFDQSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxrQkFBQTtFQUNBLHlDQUFBO0FBQ0Y7QUFDRTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLGdCQUFBO0VBQ0EsV0FBQTtBQUNKOztBQUdBO0VBQ0UsYUFBQTtFQUNBLGtCQUFBO0FBQUY7O0FBR0E7RUFDRSxjQUFBO0VBQ0EseUJBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0FBQUY7O0FBR0E7RUFDRSxtQkFBQTtBQUFGO0FBRUU7RUFDRSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSxnQkFBQTtFQUNBLFdBQUE7QUFBSjtBQUdFO0VBQ0UsV0FBQTtFQUNBLGtCQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7QUFESjtBQUdJO0VBQ0UsYUFBQTtFQUNBLHFCQUFBO0VBQ0EsNkNBQUE7QUFETjtBQUlJO0VBQ0UscUJBQUE7QUFGTjtBQUlNO0VBQ0UsNENBQUE7QUFGUjtBQU9FO0VBQ0UsY0FBQTtFQUNBLGVBQUE7RUFDQSxlQUFBO0FBTEo7O0FBU0E7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0FBTkY7QUFRRTtFQUNFLE9BQUE7RUFDQSxrQkFBQTtFQUNBLGFBQUE7RUFDQSxlQUFBO0VBQ0EsaUNBQUE7QUFOSjtBQVFJO0VBQ0UsNEJBQUE7QUFOTjtBQVNJO0VBQ0UseUJBQUE7RUFDQSxZQUFBO0FBUE47O0FBWUE7RUFDRSxrQkFBQTtBQVRGO0FBV0U7RUFDRSxrQkFBQTtFQUNBLFVBQUE7RUFDQSxRQUFBO0VBQ0EsMkJBQUE7RUFDQSxXQUFBO0FBVEo7QUFZRTtFQUNFLGtCQUFBO0FBVko7O0FBY0E7RUFDRSxhQUFBO0VBQ0EseUJBQUE7RUFDQSxTQUFBO0VBQ0EsZ0JBQUE7QUFYRjtBQWFFO0VBQ0Usa0JBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLFlBQUE7RUFDQSxpQ0FBQTtBQVhKO0FBY0U7RUFDRSx5QkFBQTtFQUNBLFlBQUE7QUFaSjtBQWNJO0VBQ0UseUJBQUE7QUFaTjtBQWdCRTtFQUNFLHlCQUFBO0VBQ0EsV0FBQTtBQWRKO0FBZ0JJO0VBQ0UseUJBQUE7QUFkTiIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogNjAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nOiAyMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBib3gtc2hhZG93OiAwIDJweCA0cHggcmdiYSgwLCAwLCAwLCAwLjA1KTtcbiAgXG4gIGgxIHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDI0cHg7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBjb2xvcjogIzMzMztcbiAgfVxufVxuXG4ubG9hZGluZywgLmVycm9yLW1lc3NhZ2Uge1xuICBwYWRkaW5nOiAyMHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5lcnJvci1tZXNzYWdlIHtcbiAgY29sb3I6ICNlNzRjM2M7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZGYzZjI7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLmZvcm0tZ3JvdXAge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICBcbiAgbGFiZWwge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbi1ib3R0b206IDhweDtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGNvbG9yOiAjNjY2O1xuICB9XG4gIFxuICBpbnB1dCwgc2VsZWN0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nOiAxMHB4IDEycHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIFxuICAgICY6Zm9jdXMge1xuICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgIGJvcmRlci1jb2xvcjogIzM0OThkYjtcbiAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDJweCByZ2JhKDUyLCAxNTIsIDIxOSwgMC4yKTtcbiAgICB9XG4gICAgXG4gICAgJi5pbnZhbGlkIHtcbiAgICAgIGJvcmRlci1jb2xvcjogI2U3NGMzYztcbiAgICAgIFxuICAgICAgJjpmb2N1cyB7XG4gICAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDJweCByZ2JhKDIzMSwgNzYsIDYwLCAwLjIpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBcbiAgLmVycm9yLXRleHQge1xuICAgIGNvbG9yOiAjZTc0YzNjO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBtYXJnaW4tdG9wOiA0cHg7XG4gIH1cbn1cblxuLnRyYW5zYWN0aW9uLXR5cGUtdG9nZ2xlIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBcbiAgLnRvZ2dsZS1vcHRpb24ge1xuICAgIGZsZXg6IDE7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmc6IDEycHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycztcbiAgICBcbiAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNkZGQ7XG4gICAgfVxuICAgIFxuICAgICYuYWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMzNDk4ZGI7XG4gICAgICBjb2xvcjogd2hpdGU7XG4gICAgfVxuICB9XG59XG5cbi5hbW91bnQtaW5wdXQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIFxuICAuY3VycmVuY3ktc3ltYm9sIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMTJweDtcbiAgICB0b3A6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgY29sb3I6ICM2NjY7XG4gIH1cbiAgXG4gIGlucHV0IHtcbiAgICBwYWRkaW5nLWxlZnQ6IDI0cHg7XG4gIH1cbn1cblxuLmZvcm0tYWN0aW9ucyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gIGdhcDogMTJweDtcbiAgbWFyZ2luLXRvcDogMzBweDtcbiAgXG4gIGJ1dHRvbiB7XG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjJzO1xuICB9XG4gIFxuICAuYnRuLXByaW1hcnkge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzNDk4ZGI7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIFxuICAgICY6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzI5ODBiOTtcbiAgICB9XG4gIH1cbiAgXG4gIC5idG4tc2Vjb25kYXJ5IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1O1xuICAgIGNvbG9yOiAjNjY2O1xuICAgIFxuICAgICY6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2UwZTBlMDtcbiAgICB9XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","TransactionType","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","error","ɵɵlistener","TransactionFormComponent_form_5_div_5_Template_div_click_0_listener","restoredCtx","ɵɵrestoreView","_r11","type_r9","$implicit","ctx_r10","ɵɵnextContext","tmp_b_0","ɵɵresetView","transactionForm","get","setValue","ɵɵclassProp","tmp_0_0","ctx_r3","value","ɵɵtextInterpolate1","ctx_r4","getErrorMessage","ctx_r5","ctx_r6","ɵɵproperty","category_r12","ctx_r8","TransactionFormComponent_form_5_Template_form_ngSubmit_0_listener","_r14","ctx_r13","onSubmit","ɵɵtemplate","TransactionFormComponent_form_5_div_5_Template","ɵɵelement","TransactionFormComponent_form_5_div_10_Template","TransactionFormComponent_form_5_div_18_Template","TransactionFormComponent_form_5_div_23_Template","TransactionFormComponent_form_5_option_30_Template","TransactionFormComponent_form_5_div_31_Template","ctx_r2","transactionTypes","isInvalid","categories","isEditMode","TransactionFormComponent","constructor","fb","transactionService","route","router","transactionId","loading","Object","values","group","description","required","maxLength","amount","min","date","category","type","EXPENSE","ngOnInit","params","subscribe","loadTransaction","today","Date","formattedDate","toISOString","substring","patchValue","id","getTransactionById","next","transaction","err","console","invalid","keys","controls","forEach","key","control","markAsTouched","transactionData","updateTransaction","navigate","createTransaction","controlName","dirty","touched","errors","ɵɵdirectiveInject","i1","FormBuilder","i2","TransactionService","i3","ActivatedRoute","Router","selectors","decls","vars","consts","template","TransactionFormComponent_Template","rf","ctx","TransactionFormComponent_div_3_Template","TransactionFormComponent_div_4_Template","TransactionFormComponent_form_5_Template"],"sources":["C:\\Uni\\finance-manager\\frontend\\src\\app\\components\\transaction-form\\transaction-form.component.ts","C:\\Uni\\finance-manager\\frontend\\src\\app\\components\\transaction-form\\transaction-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TransactionService } from '../../services/transaction.service';\nimport { Transaction, TransactionType } from '../../models/transaction.model';\n\n@Component({\n  selector: 'app-transaction-form',\n  templateUrl: './transaction-form.component.html',\n  styleUrls: ['./transaction-form.component.scss']\n})\nexport class TransactionFormComponent implements OnInit {\n  transactionForm: FormGroup;\n  isEditMode = false;\n  transactionId: number | null = null;\n  loading = false;\n  error: string | null = null;\n  transactionTypes = Object.values(TransactionType);\n  \n  // Common categories for transactions\n  categories = [\n    'Food & Dining', \n    'Shopping', \n    'Housing', \n    'Transportation', \n    'Entertainment', \n    'Healthcare', \n    'Education', \n    'Utilities', \n    'Travel', \n    'Gifts & Donations',\n    'Salary',\n    'Investment',\n    'Other Income'\n  ];\n\n  constructor(\n    private fb: FormBuilder,\n    private transactionService: TransactionService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.transactionForm = this.fb.group({\n      description: ['', [Validators.required, Validators.maxLength(100)]],\n      amount: ['', [Validators.required, Validators.min(0.01)]],\n      date: ['', Validators.required],\n      category: ['', Validators.required],\n      type: [TransactionType.EXPENSE, Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n    // Check if we're in edit mode by looking for an ID in the route\n    this.route.params.subscribe(params => {\n      if (params['id']) {\n        this.isEditMode = true;\n        this.transactionId = +params['id'];\n        this.loadTransaction(this.transactionId);\n      } else {\n        // Set default date to today for new transactions\n        const today = new Date();\n        const formattedDate = today.toISOString().substring(0, 16); // Format: YYYY-MM-DDTHH:MM\n        this.transactionForm.patchValue({ date: formattedDate });\n      }\n    });\n  }\n\n  loadTransaction(id: number): void {\n    this.loading = true;\n    this.transactionService.getTransactionById(id).subscribe({\n      next: (transaction) => {\n        // Format the date to be compatible with the datetime-local input\n        const formattedDate = new Date(transaction.date).toISOString().substring(0, 16);\n        \n        this.transactionForm.patchValue({\n          description: transaction.description,\n          amount: transaction.amount,\n          date: formattedDate,\n          category: transaction.category,\n          type: transaction.type\n        });\n        \n        this.loading = false;\n      },\n      error: (err) => {\n        this.error = 'Failed to load transaction';\n        this.loading = false;\n        console.error(err);\n      }\n    });\n  }\n\n  onSubmit(): void {\n    if (this.transactionForm.invalid) {\n      // Mark all fields as touched to trigger validation messages\n      Object.keys(this.transactionForm.controls).forEach(key => {\n        const control = this.transactionForm.get(key);\n        control?.markAsTouched();\n      });\n      return;\n    }\n\n    this.loading = true;\n    \n    // Create transaction object from form values\n    const transactionData: Transaction = {\n      ...this.transactionForm.value,\n      // Ensure date is in ISO format\n      date: new Date(this.transactionForm.value.date).toISOString()\n    };\n\n    // If in edit mode, update existing transaction, otherwise create new one\n    if (this.isEditMode && this.transactionId) {\n      transactionData.id = this.transactionId;\n      this.transactionService.updateTransaction(transactionData).subscribe({\n        next: () => {\n          this.loading = false;\n          this.router.navigate(['/transactions']);\n        },\n        error: (err) => {\n          this.error = 'Failed to update transaction';\n          this.loading = false;\n          console.error(err);\n        }\n      });\n    } else {\n      this.transactionService.createTransaction(transactionData).subscribe({\n        next: () => {\n          this.loading = false;\n          this.router.navigate(['/transactions']);\n        },\n        error: (err) => {\n          this.error = 'Failed to create transaction';\n          this.loading = false;\n          console.error(err);\n        }\n      });\n    }\n  }\n\n  // Helper method to check if a form control is invalid and touched\n  isInvalid(controlName: string): boolean {\n    const control = this.transactionForm.get(controlName);\n    return !!control && control.invalid && (control.dirty || control.touched);\n  }\n\n  // Helper method to get error message for a form control\n  getErrorMessage(controlName: string): string {\n    const control = this.transactionForm.get(controlName);\n    \n    if (!control) return '';\n    \n    if (control.errors?.['required']) {\n      return 'This field is required';\n    }\n    \n    if (control.errors?.['min']) {\n      return 'Value must be greater than 0';\n    }\n    \n    if (control.errors?.['maxlength']) {\n      return 'Value is too long';\n    }\n    \n    return 'Invalid value';\n  }\n}\n","<div class=\"form-container\">\n  <h1>{{ isEditMode ? 'Edit' : 'Add' }} Transaction</h1>\n  \n  <div *ngIf=\"loading\" class=\"loading\">Loading...</div>\n  \n  <div *ngIf=\"error\" class=\"error-message\">{{ error }}</div>\n  \n  <form [formGroup]=\"transactionForm\" (ngSubmit)=\"onSubmit()\" *ngIf=\"!loading\">\n    <div class=\"form-group\">\n      <label for=\"type\">Transaction Type</label>\n      <div class=\"transaction-type-toggle\">\n        <div class=\"toggle-option\" \n             *ngFor=\"let type of transactionTypes\"\n             [class.active]=\"transactionForm.get('type')?.value === type\"\n             (click)=\"transactionForm.get('type')?.setValue(type)\">\n          {{ type }}\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"form-group\">\n      <label for=\"description\">Description</label>\n      <input \n        type=\"text\" \n        id=\"description\" \n        formControlName=\"description\"\n        [class.invalid]=\"isInvalid('description')\"\n        placeholder=\"What was this transaction for?\">\n      <div class=\"error-text\" *ngIf=\"isInvalid('description')\">\n        {{ getErrorMessage('description') }}\n      </div>\n    </div>\n    \n    <div class=\"form-group\">\n      <label for=\"amount\">Amount</label>\n      <div class=\"amount-input\">\n        <span class=\"currency-symbol\">€</span>\n        <input \n          type=\"number\" \n          id=\"amount\" \n          formControlName=\"amount\"\n          [class.invalid]=\"isInvalid('amount')\"\n          step=\"0.01\"\n          min=\"0.01\"\n          placeholder=\"0.00\">\n      </div>\n      <div class=\"error-text\" *ngIf=\"isInvalid('amount')\">\n        {{ getErrorMessage('amount') }}\n      </div>\n    </div>\n    \n    <div class=\"form-group\">\n      <label for=\"date\">Date & Time</label>\n      <input \n        type=\"datetime-local\" \n        id=\"date\" \n        formControlName=\"date\"\n        [class.invalid]=\"isInvalid('date')\">\n      <div class=\"error-text\" *ngIf=\"isInvalid('date')\">\n        {{ getErrorMessage('date') }}\n      </div>\n    </div>\n    \n    <div class=\"form-group\">\n      <label for=\"category\">Category</label>\n      <select \n        id=\"category\" \n        formControlName=\"category\"\n        [class.invalid]=\"isInvalid('category')\">\n        <option value=\"\" disabled>Select a category</option>\n        <option *ngFor=\"let category of categories\" [value]=\"category\">{{ category }}</option>\n      </select>\n      <div class=\"error-text\" *ngIf=\"isInvalid('category')\">\n        {{ getErrorMessage('category') }}\n      </div>\n    </div>\n    \n    <div class=\"form-actions\">\n      <button type=\"button\" class=\"btn-secondary\" routerLink=\"/transactions\">Cancel</button>\n      <button type=\"submit\" class=\"btn-primary\">{{ isEditMode ? 'Update' : 'Add' }} Transaction</button>\n    </div>\n  </form>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}